:root {
  --spacer:var(--spacer-normal);
  --spacer-default:var(--spacer-normal);
  --spacer-none:0px;
  --spacer-smaller:calc(var(--spacer-normal) * 0.25);
  --spacer-small:calc(var(--spacer-normal) * 0.50);
  --spacer-normal:1rem;
  --spacer-large:calc(var(--spacer-normal) * 1.50);
  --spacer-larger:calc(var(--spacer-normal) * 3.00);
}

/* begin: merge the required bootstrap components */
/* end: merge the required bootstrap components */
/* begin: merge the required BS breakpoints */
/* end: merge the required BS breakpoints */
/* begin: we merged small desktops & tablets as "tablet" */
/* end: we merged small desktops & tablets as "tablet" */
/* begin: we merged landscape phones & portrait phones as "phone" */
/* begin: we merged landscape phones & portrait phones as "phone" */
:root {
  --container-x:0.75rem;
  --container-y:0.75rem;
}
@media (min-width: 768px) {
  :root {
    --container-x:2.25rem;
    --container-y:2.25rem;
  }
}
@media (min-width: 1200px) {
  :root {
    --container-x:4.5rem;
    --container-y:4.5rem;
  }
}

:not(article).container-x {
  padding-left: var(--container-x);
  padding-right: var(--container-x);
}

article.container-x > header, article.container-x > h1, article.container-x > h2, article.container-x > h3, article.container-x > h4, article.container-x > h5, article.container-x > h6, article.container-x > .body, article.container-x > footer, article.container-x > aside {
  padding-left: var(--container-x);
  padding-right: var(--container-x);
}

:not(article).container-x-50 {
  padding-left: calc(var(--container-x) / 2);
  padding-right: calc(var(--container-x) / 2);
}

article.container-x-50 > header, article.container-x-50 > h1, article.container-x-50 > h2, article.container-x-50 > h3, article.container-x-50 > h4, article.container-x-50 > h5, article.container-x-50 > h6, article.container-x-50 > .body, article.container-x-50 > footer, article.container-x-50 > aside {
  padding-left: calc(var(--container-x) / 2);
  padding-right: calc(var(--container-x) / 2);
}

:not(article).container-x-0 {
  padding-left: 0;
  padding-right: 0;
}

article.container-x-0 > header, article.container-x-0 > h1, article.container-x-0 > h2, article.container-x-0 > h3, article.container-x-0 > h4, article.container-x-0 > h5, article.container-x-0 > h6, article.container-x-0 > .body, article.container-x-0 > footer, article.container-x-0 > aside {
  padding-left: 0;
  padding-right: 0;
}

:not(article).container-y {
  padding-top: var(--container-y);
  padding-bottom: var(--container-y);
}

article.container-y > header, article.container-y > h1, article.container-y > h2, article.container-y > h3, article.container-y > h4, article.container-y > h5, article.container-y > h6, article.container-y > .body, article.container-y > footer, article.container-y > aside {
  padding-top: var(--container-y);
  padding-bottom: var(--container-y);
}

:not(article).container-y-50 {
  padding-top: calc(var(--container-y) / 2);
  padding-bottom: calc(var(--container-y) / 2);
}

article.container-y-50 > header, article.container-y-50 > h1, article.container-y-50 > h2, article.container-y-50 > h3, article.container-y-50 > h4, article.container-y-50 > h5, article.container-y-50 > h6, article.container-y-50 > .body, article.container-y-50 > footer, article.container-y-50 > aside {
  padding-top: calc(var(--container-y) / 2);
  padding-bottom: calc(var(--container-y) / 2);
}

:not(article).container-y-0 {
  padding-top: 0;
  padding-bottom: 0;
}

article.container-y-0 > header, article.container-y-0 > h1, article.container-y-0 > h2, article.container-y-0 > h3, article.container-y-0 > h4, article.container-y-0 > h5, article.container-y-0 > h6, article.container-y-0 > .body, article.container-y-0 > footer, article.container-y-0 > aside {
  padding-top: 0;
  padding-bottom: 0;
}

:not(article).container {
  padding-left: var(--container-x);
  padding-right: var(--container-x);
  padding-top: var(--container-y);
  padding-bottom: var(--container-y);
}

article.container > header, article.container > h1, article.container > h2, article.container > h3, article.container > h4, article.container > h5, article.container > h6, article.container > .body, article.container > footer, article.container > aside {
  padding-left: var(--container-x);
  padding-right: var(--container-x);
}
article.container > header, article.container > h1, article.container > h2, article.container > h3, article.container > h4, article.container > h5, article.container > h6, article.container > .body, article.container > footer, article.container > aside {
  padding-top: var(--container-y);
  padding-bottom: var(--container-y);
}

:not(article).container-50 {
  padding-left: calc(var(--container-x) / 2);
  padding-right: calc(var(--container-x) / 2);
  padding-top: calc(var(--container-y) / 2);
  padding-bottom: calc(var(--container-y) / 2);
}

article.container-50 > header, article.container-50 > h1, article.container-50 > h2, article.container-50 > h3, article.container-50 > h4, article.container-50 > h5, article.container-50 > h6, article.container-50 > .body, article.container-50 > footer, article.container-50 > aside {
  padding-left: calc(var(--container-x) / 2);
  padding-right: calc(var(--container-x) / 2);
}
article.container-50 > header, article.container-50 > h1, article.container-50 > h2, article.container-50 > h3, article.container-50 > h4, article.container-50 > h5, article.container-50 > h6, article.container-50 > .body, article.container-50 > footer, article.container-50 > aside {
  padding-top: calc(var(--container-y) / 2);
  padding-bottom: calc(var(--container-y) / 2);
}

:not(article).container-0 {
  padding-left: 0;
  padding-right: 0;
  padding-top: 0;
  padding-bottom: 0;
}

article.container-0 > header, article.container-0 > h1, article.container-0 > h2, article.container-0 > h3, article.container-0 > h4, article.container-0 > h5, article.container-0 > h6, article.container-0 > .body, article.container-0 > footer, article.container-0 > aside {
  padding-left: 0;
  padding-right: 0;
}
article.container-0 > header, article.container-0 > h1, article.container-0 > h2, article.container-0 > h3, article.container-0 > h4, article.container-0 > h5, article.container-0 > h6, article.container-0 > .body, article.container-0 > footer, article.container-0 > aside {
  padding-top: 0;
  padding-bottom: 0;
}

:not(article).not-container {
  padding: 0 !important;
}

article.not-container > header, article.not-container > h1, article.not-container > h2, article.not-container > h3, article.not-container > h4, article.not-container > h5, article.not-container > h6, article.not-container > .body, article.not-container > footer, article.not-container > aside {
  padding: 0 !important;
}

:root {
  --masonry-padding-x:var(--container-x, var(--masonry-spacer-x));
  --masonry-padding-y:var(--container-y, var(--masonry-spacer-y));
  --masonry-spacer-x:var(--spacer-default);
  --masonry-spacer-y:var(--spacer-default);
  --masonry-items-min-width:250px;
  --masonry-items-grow-height:calc(var(--masonry-items-min-width) * 0.10);
}

.masonry {
  padding-left: var(--masonry-padding-x);
  padding-right: var(--masonry-padding-x);
  padding-top: var(--masonry-padding-y);
  padding-bottom: var(--masonry-padding-y);
  display: grid;
  grid-auto-flow: row;
  column-gap: var(--masonry-spacer-x);
  row-gap: var(--masonry-spacer-y);
  grid-template-columns: repeat(auto-fill, minmax(var(--masonry-items-min-width), 1fr));
  grid-auto-rows: var(--masonry-items-grow-height);
  justify-items: stretch;
  align-items: stretch;
}